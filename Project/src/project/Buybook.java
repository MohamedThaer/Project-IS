/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project;
import java.awt.Color;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RTX
 */
public class Buybook extends javax.swing.JFrame {

    Connection con;
    DefaultTableModel dtm;
    ArrayList<Integer> buyIds = new ArrayList<>();
    ArrayList<Integer> bookIds = new ArrayList<>();//dynamic array >>refrence type
    //ArrayList<String> SecName = new ArrayList<>();

    public Buybook() {
        initComponents();
        this.setLocationRelativeTo(null);
        Buybook();
        dtm = new DefaultTableModel();
        dtm.addColumn("Section");
        dtm.addColumn("Name");
        dtm.addColumn("Price");
        dtm.addColumn("Amount");
         try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/library", "root", "mo992004");
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        fillcombo_section();
         modelTable();
    }

    public void Buybook() {
        ImageIcon icon = new ImageIcon("D:\\Project\\src\\images\\Login_img.jpg");
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(JPanel.getWidth(), JPanel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon scaleIcon = new ImageIcon(imgScale);
        background.setIcon(scaleIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        JPanel = new javax.swing.JPanel();
        combo_book = new javax.swing.JComboBox<>();
        combo_section = new javax.swing.JComboBox<>();
        lbl_cost = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btn_add = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        spin_n_days = new javax.swing.JSpinner();
        lbl_Amount = new javax.swing.JLabel();
        lbl_show = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_show = new javax.swing.JTable();

        jButton1.setText(" Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JPanel.setLayout(null);

        combo_book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_bookActionPerformed(evt);
            }
        });
        JPanel.add(combo_book);
        combo_book.setBounds(100, 120, 268, 22);

        combo_section.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_sectionActionPerformed(evt);
            }
        });
        JPanel.add(combo_section);
        combo_section.setBounds(100, 80, 268, 22);

        lbl_cost.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbl_cost.setText("Price:");
        JPanel.add(lbl_cost);
        lbl_cost.setBounds(10, 210, 60, 22);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Buy Book");
        JPanel.add(jLabel1);
        jLabel1.setBounds(150, 0, 120, 32);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("Section :");
        JPanel.add(jLabel3);
        jLabel3.setBounds(10, 80, 70, 22);

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        JPanel.add(jSeparator1);
        jSeparator1.setBounds(150, 40, 110, 20);

        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        JPanel.add(btn_add);
        btn_add.setBounds(60, 260, 94, 33);

        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        JPanel.add(btn_delete);
        btn_delete.setBounds(240, 260, 94, 33);

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        JPanel.add(btn_cancel);
        btn_cancel.setBounds(150, 300, 94, 33);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setText("Book :");
        JPanel.add(jLabel4);
        jLabel4.setBounds(10, 120, 60, 22);

        spin_n_days.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spin_n_daysMouseClicked(evt);
            }
        });
        JPanel.add(spin_n_days);
        spin_n_days.setBounds(100, 160, 130, 30);

        lbl_Amount.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbl_Amount.setText("Amount: ");
        JPanel.add(lbl_Amount);
        lbl_Amount.setBounds(10, 160, 70, 22);
        JPanel.add(lbl_show);
        lbl_show.setBounds(70, 210, 150, 30);
        JPanel.add(background);
        background.setBounds(0, 0, 420, 370);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 153, 0));
        jScrollPane1.setForeground(new java.awt.Color(255, 102, 51));

        tbl_show.setForeground(new java.awt.Color(255, 102, 0));
        tbl_show.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Author", "Amount", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_showMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_show);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void fillcombo_section() {
        try {

            combo_section.removeAllItems();
            Set<String> uniqueSections = new LinkedHashSet<>();
            combo_book.removeAllItems();
            dtm.setRowCount(0);//for empty default model
            PreparedStatement stmt = con.prepareStatement("select book_id,book_section from book");
            ResultSet rs = stmt.executeQuery();
            while (rs.next() && !rs.wasNull()) {
                String section = rs.getString("book_section");
                if (!uniqueSections.contains(section)) {
                    uniqueSections.add(section);
                    combo_section.addItem(section);

                }
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        fillcombo_book(combo_section.getSelectedItem().toString());
    }

    private void fillcombo_book(String sec) {
         try {
            combo_book.removeAllItems();
            PreparedStatement st = con.prepareStatement("select * from book where book_section=?");
            st.setString(1, sec);
            ResultSet rs;
            rs = st.executeQuery();
            while (rs.next()) {
                bookIds.add(rs.getInt(1));
                combo_book.addItem(rs.getString(2));
               
            }
        } catch (SQLException ex) {
            Logger.getLogger(Buybook.class.getName()).log(Level.SEVERE, null, ex);
        }
         
    }

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        Coustumer obj = new Coustumer();
        dispose();
        obj.setVisible(true);
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void combo_sectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_sectionActionPerformed
//        // TODO add your handling code here:
        if (combo_book.getItemCount() != 0) {
            combo_book.removeAllItems();
        }
        fillcombo_book(combo_section.getSelectedItem().toString());
    }//GEN-LAST:event_combo_sectionActionPerformed
    private void modelTable() {
        try {
            dtm.setRowCount(0);//for empty default model
            PreparedStatement stmt = con.prepareStatement("select bbook_id,bbook_sec,bbook_name,bbook_price,bbook_amount from buy_book");
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                buyIds.add(rs.getInt(1));
                dtm.addRow(new Object[]{rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
            }
            tbl_show.setModel(dtm);

        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }
    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        select();
        try {
            // TODO add your handling code here:
            PreparedStatement stmt = con.prepareStatement("delete from buy_book  where bbook_id=?");
          
            stmt.setInt(1, tbl_show.getSelectedRow()+1);

            stmt.executeUpdate();
            modelTable();
            JOptionPane.showMessageDialog(this, "Deleted Succeded");
        } catch (SQLException ex) {
            Logger.getLogger(borrowbook.class.getName()).log(Level.SEVERE, null, ex);
        }
        select();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        if ((Integer) spin_n_days.getValue() <= 0) {
            JOptionPane.showMessageDialog(this, " not added /n Fields is empty", "confirmation", 0);
            return;
        }
        try {

            String book_name = combo_book.getSelectedItem().toString();//book name
            String book_section = combo_section.getSelectedItem().toString();//book section
            String price = lbl_show.getText();
            String num = spin_n_days.getValue().toString();
            int cbxbb_selected = combo_book.getSelectedIndex();

            PreparedStatement st = con.prepareStatement("insert into buy_book (bbook_name,bbook_price,bbook_amount,bbook_sec) values (?,?,?,?) ");

            st.setString(1, book_name);
            st.setString(2, price);
            st.setString(3, num);
            st.setString(4, book_section);
            // st.setInt(4, bookIds.get(cbxbb_selected));
            st.executeUpdate();
            select();
            modelTable();
            
            JOptionPane.showMessageDialog(this, "Book Added", "confirmation", 1);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_btn_addActionPerformed
    private void fill_price(String book_name) {
        try {
           
            PreparedStatement st = con.prepareStatement("select * from book where book_name=?");
            st.setString(1, book_name);
            ResultSet rs;
            rs = st.executeQuery();
            while (rs.next()) {
                lbl_show.setText(rs.getString(6));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Buybook.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void combo_bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_bookActionPerformed
        // TODO add your handling code here:
        //fill_price(combo_book.getSelectedItem().toString());
        //fill_price();
        if(combo_book.getItemCount()!=0){
            
         fill_price(combo_book.getSelectedItem().toString());
        }
    }//GEN-LAST:event_combo_bookActionPerformed

    private void spin_n_daysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spin_n_daysMouseClicked
        // TODO add your handling code here:
         if ((Integer) spin_n_days.getValue() <= 0) {
            spin_n_days.setValue(1);
        }
    }//GEN-LAST:event_spin_n_daysMouseClicked
     private void update(int x , int i){
        try {
            PreparedStatement stmt = con.prepareStatement("update buy_book set bbook_id=? where bbook_id=?");
            stmt.setInt(1, i);
            stmt.setInt(2, x);
            stmt.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(book.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void select(){
        try {
            int i=1;
            PreparedStatement stmt = con.prepareStatement("select bbook_id from buy_book");
            ResultSet rs = stmt.executeQuery();
            while (rs.next() && !rs.wasNull()) {
                update(rs.getInt(1),i);
                i++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(book.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void tbl_showMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_showMouseClicked
        // TODO add your handling code here:
        combo_book.setSelectedItem(tbl_show.getValueAt(tbl_show.getSelectedRow(), 2));

    }//GEN-LAST:event_tbl_showMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buybook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buybook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buybook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buybook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buybook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanel;
    private javax.swing.JLabel background;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_delete;
    private javax.swing.JComboBox<String> combo_book;
    private javax.swing.JComboBox<String> combo_section;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_Amount;
    private javax.swing.JLabel lbl_cost;
    private javax.swing.JLabel lbl_show;
    private javax.swing.JSpinner spin_n_days;
    private javax.swing.JTable tbl_show;
    // End of variables declaration//GEN-END:variables
}
